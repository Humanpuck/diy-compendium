{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/markdown/page.js"],"names":["NotFoundPage","title","md","MarkdownPage","data","markdownRemark","html","frontmatter","description","dangerouslySetInnerHTML","__html","displayName","pageQuery"],"mappings":"6FAAA,4FAoBeA,UAdM,kBACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,cACX,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,MACN,yCACA,kE,kCCbV,kJASMC,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,IAAKA,IAASA,EAAKC,eACjB,OAAO,kBAAC,UAAD,MAFwB,MAU7BD,EAJFC,eACEC,EAP6B,EAO7BA,KACeL,EARc,EAQ7BM,YAAeN,MAInB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,MAAOA,EAAOO,YAAaP,IAChC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,GAAG,KAAKO,wBAAyB,CAAEC,OAAQJ,SAO1DH,EAAaQ,YAAc,kBAKZR,YAER,IAAMS,EAAS","file":"component---src-components-markdown-page-js-e4b60f54a4d170134192.js","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport SEO from '~components/seo';\nimport Layout from '~components/layout';\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"Not Found\" />\n    <Container>\n      <Row>\n        <Col md=\"12\">\n          <h1>Not Found</h1>\n          <p>Sorry, this URL is not valid.</p>\n        </Col>\n      </Row>\n    </Container>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport SEO from '~components/seo';\nimport NotFoundPage from '~pages/404';\nimport Layout from '~components/layout';\n\nconst MarkdownPage = ({ data }) => {\n  if (!data || !data.markdownRemark) {\n    return <NotFoundPage />;\n  }\n\n  const {\n    markdownRemark: {\n      html,\n      frontmatter: { title }\n    }\n  } = data;\n\n  return (\n    <Layout>\n      <SEO title={title} description={title} />\n      <Container>\n        <Row>\n          <Col md=\"12\" dangerouslySetInnerHTML={{ __html: html }} />\n        </Row>\n      </Container>\n    </Layout>\n  );\n};\n\nMarkdownPage.displayName = 'MarkdownContent';\nMarkdownPage.propTypes = {\n  data: PropTypes.object\n};\n\nexport default MarkdownPage;\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}