{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/content.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_bootstrap__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","NotFoundPage","a","createElement","title","className","md","d","pageQuery","_seo__WEBPACK_IMPORTED_MODULE_4__","_layout__WEBPACK_IMPORTED_MODULE_5__","_pages_404__WEBPACK_IMPORTED_MODULE_6__","Content","_ref","data","markdownRemark","_data$markdownRemark","html","frontmatter","dangerouslySetInnerHTML","__html","displayName","m","module","exports","require","default","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Footer","render","react_default","Container","Row","Col","href","rel","Component","loader","enqueue","React","createContext","Header","siteTitle","Navbar","variant","bg","expand","Brand","gatsby_link_default","to","Collapse","Nav","Link","as","NavDropdown_default","id","Item","Layout","children","_856328897","react","header","footer_Footer","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json"],"mappings":"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","file":"component---src-components-content-js-54ccb1b41ef7fd1bdc15.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\n\r\nconst NotFoundPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Not Found\" />\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <h1>Not Found</h1>\r\n          <p>Sorry, this URL is not valid.</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </Layout>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport SEO from './seo';\r\nimport Layout from './layout';\r\nimport NotFoundPage from '../pages/404';\r\n\r\nconst Content = ({ data }) => {\r\n  if (!data || !data.markdownRemark) {\r\n    return <NotFoundPage />;\r\n  }\r\n\r\n  const {\r\n    markdownRemark: {\r\n      html,\r\n      frontmatter: { title }\r\n    }\r\n  } = data;\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} />\r\n      <Container className=\"mt-5\">\r\n        <Row>\r\n          <Col md=\"12\" dangerouslySetInnerHTML={{ __html: html }} />\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nContent.displayName = 'Content';\r\nContent.propTypes = {\r\n  data: PropTypes.object\r\n};\r\n\r\nexport default Content;\r\n\r\nexport const pageQuery = graphql`\r\n  query($path: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\r\n      html\r\n      frontmatter {\r\n        path\r\n        title\r\n      }\r\n    }\r\n  }\r\n`;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SEO;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nimport './footer.scss';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"pt-4 my-md-5 pt-md-5 border-top diy-footer m-auto\">\r\n        <Container>\r\n          <Row>\r\n            <Col md=\"4\">Copyright &copy; 2019 DIY Compendium</Col>\r\n            <Col md=\"4\">\r\n              <a\r\n                href=\"https://github.com/ayan4m1/diy-compendium\"\r\n                rel=\"noopener noreferer\"\r\n              >\r\n                GitHub\r\n              </a>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              Created using <a href=\"https://gatsbyjs.org\">Gatsby</a>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <Navbar variant=\"dark\" bg=\"primary\" expand=\"lg\">\r\n    <Navbar.Brand>\r\n      <Link to=\"/\">{siteTitle}</Link>\r\n    </Navbar.Brand>\r\n    <Navbar.Collapse>\r\n      <Nav>\r\n        <Nav.Link as={Link} to=\"/quick-start\">\r\n          Quick Start\r\n        </Nav.Link>\r\n        <NavDropdown title=\"Guides\" id=\"dropdown-guides\">\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/chemistry\">Chemistry</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/equipment\">Equipment</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/flavors\">Flavors</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/videos\">Videos</Link>\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n        <NavDropdown title=\"Vendors\" id=\"dropdown-vendors\">\r\n          <NavDropdown.Item>\r\n            <Link to=\"/vendors/the-flavor-apprentice-tfa-tpa\">\r\n              The Flavor Apprentice\r\n            </Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/vendors/capella-flavors-cap\">Capella Flavors</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/vendors/flavorah-flv\">Flavorah</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/vendors/flavor-west-fw\">Flavor West</Link>\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n        <Nav.Link as={Link} to=\"/troubleshooting\">\r\n          Troubleshooting\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n);\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport './layout.scss';\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}