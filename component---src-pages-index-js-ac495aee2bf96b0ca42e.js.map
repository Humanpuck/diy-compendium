{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","IndexPage","a","createElement","title","className","md","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","React","InternalPageRenderer","_objectSpread","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Footer","render","react_default","Container","Row","Col","href","rel","Component","loader","enqueue","createContext","Header","siteTitle","Navbar","variant","bg","expand","Brand","gatsby_link_default","to","Collapse","Nav","Link","as","NavDropdown_default","id","Item","Layout","children","_856328897","react","header","footer_Footer"],"mappings":"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","file":"component---src-pages-index-js-ac495aee2bf96b0ca42e.js","sourcesContent":["import React from 'react';\r\n\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <h1>Welcome to the DIY Compendium!</h1>\r\n          <p>We need some content here.</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </Layout>\r\n);\r\n\r\nexport default IndexPage;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  );\r\n\r\n  const metaDescription = description || site.siteMetadata.description;\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription\r\n        }\r\n      ].concat(meta)}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default SEO;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\n\r\nimport './footer.scss';\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className=\"pt-4 my-md-5 pt-md-5 border-top diy-footer m-auto\">\r\n        <Container>\r\n          <Row>\r\n            <Col md=\"4\">Copyright &copy; 2019 DIY Compendium</Col>\r\n            <Col md=\"4\">\r\n              <a\r\n                href=\"https://github.com/ayan4m1/diy-compendium\"\r\n                rel=\"noopener noreferer\"\r\n              >\r\n                GitHub\r\n              </a>\r\n            </Col>\r\n            <Col md=\"4\">\r\n              Created using <a href=\"https://gatsbyjs.org\">Gatsby</a>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <Navbar variant=\"dark\" bg=\"primary\" expand=\"lg\">\r\n    <Navbar.Brand>\r\n      <Link to=\"/\">{siteTitle}</Link>\r\n    </Navbar.Brand>\r\n    <Navbar.Collapse>\r\n      <Nav>\r\n        <Nav.Link as={Link} to=\"/quick-start\">\r\n          Quick Start\r\n        </Nav.Link>\r\n        <NavDropdown title=\"Guides\" id=\"dropdown-guides\">\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/chemistry\">Chemistry</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/equipment\">Equipment</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/flavors\">Flavors</Link>\r\n          </NavDropdown.Item>\r\n          <NavDropdown.Item>\r\n            <Link to=\"/guides/videos\">Videos</Link>\r\n          </NavDropdown.Item>\r\n        </NavDropdown>\r\n        <Nav.Link as={Link} to=\"/troubleshooting\">\r\n          Troubleshooting\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar.Collapse>\r\n  </Navbar>\r\n);\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string\r\n};\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``\r\n};\r\n\r\nexport default Header;\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStaticQuery, graphql } from 'gatsby';\r\n\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport './layout.scss';\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <main>{children}</main>\r\n      <Footer />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default Layout;\r\n"],"sourceRoot":""}